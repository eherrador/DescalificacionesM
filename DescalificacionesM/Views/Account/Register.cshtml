@model DescalificacionesM.Models.RegisterModel

@*@{
    ViewBag.Title = "Register";
}*@

@*<p>
    Passwords must be at least @Membership.MinRequiredPasswordLength characters long.
</p>*@

@*@using (Html.BeginForm()) {
    @Html.AntiForgeryToken()
    @Html.ValidationSummary()

        <ul data-role="listview" data-inset="true">
            <li data-role="list-divider">Details</li>

            <li data-role="fieldcontain">
                @Html.LabelFor(m => m.UserName)
                @Html.TextBoxFor(m => m.UserName)
            </li>

            <li data-role="fieldcontain">
                @Html.LabelFor(m => m.Email)
                @Html.TextBoxFor(m => m.Email)
            </li>

            <li data-role="fieldcontain">
                @Html.LabelFor(m => m.Password)
                @Html.PasswordFor(m => m.Password)
            </li>

            <li data-role="fieldcontain">
                @Html.LabelFor(m => m.ConfirmPassword)
                @Html.PasswordFor(m => m.ConfirmPassword)
            </li>

            <li data-role="fieldcontain">
                <input type="submit" data-theme="b" data-icon="check" value="Register" />
            </li>
        </ul>
}*@



<div data-role="popup" id="popupLogin" data-theme="a" class="ui-corner-all">
    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()
        @Html.ValidationSummary()

        <div style="padding:10px 20px;">
            <h3>Por favor registrese</h3>
            <fieldset>
                @Html.LabelFor(m => m.UserName)
                @Html.TextBoxFor(m => m.UserName)

                @Html.LabelFor(m => m.Email)
                @Html.TextBoxFor(m => m.Email)

                @Html.LabelFor(m => m.Password)
                @Html.PasswordFor(m => m.Password)

                @Html.LabelFor(m => m.ConfirmPassword)
                @Html.PasswordFor(m => m.ConfirmPassword)

                <input type="submit" data-theme="b" data-icon="check" value="Register">
            </fieldset>
        </div>
    }
</div>


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}